generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Directions {
  id              Int        @id @default(autoincrement())
  name            String
  description     String
  professor       String
  color           String
  subDirections   SubDirections[]
  requests        Request[] 
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model SubDirections {
  id              Int        @id @default(autoincrement())
  name            String
  description     String
  examplelink     String
  additionalInfo  String
  downloadFile    Boolean
  textField       Boolean
  directionId     Int
  directions      Directions @relation(fields: [directionId], references: [id], onDelete: Cascade)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}


model Request {
  id              Int        @id @default(autoincrement())
  name            String
  surname         String
  email           String
  text            String
  status          Status     @default(Submitted)
  document        Document?
  directionId     Int
  messages        Message[]
  directions      Directions @relation(fields: [directionId], references: [id])     
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Document {
  id              Int       @id @default(autoincrement())
  requestId       Int       @unique
  request         Request   @relation(fields: [requestId], references: [id])
  filename        String
  filepath        String
}

model Message {
  id              Int       @id @default(autoincrement())
  requestId       Int       @unique
  request         Request   @relation(fields: [requestId], references: [id])
  senderId        Int
  text            String
  filename        String
  filepath        String           
}

enum Status {
  Submitted
  Processing
  Clarify
  Clarified
  Processed
  Canceled
}